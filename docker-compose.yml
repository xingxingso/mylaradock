version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  memcached:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  elasticsearch:
    driver: ${VOLUMES_DRIVER}

services:

### Workspace Utilities ##################################
    workspace:
      build:
        context: ./images/workspace
        args:
          - LARADOCK_PHP_VERSION=${PHP_VERSION_1}
          - PUID=${WORKSPACE_PUID}
          - PGID=${WORKSPACE_PGID}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      ports:
        - "${WORKSPACE_SSH_PORT}:22"
      tty: true
      networks:
        - frontend
        - backend

### NGINX Server #########################################
    nginx:
      build:
        context: ./images/nginx
        args:
          - CHANGE_SOURCE=${CHANGE_SOURCE}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        - ${NGINX_UPSTREAM_CONF_PATH}:/etc/nginx/conf.d/
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php-fpm-1
        - php-fpm-2
      networks:
        - frontend
        - backend

### PHP-FPM ##############################################
    php-fpm-1:
      build:
        context: ./images/php-fpm
        args:
          - LARADOCK_PHP_VERSION=${PHP_VERSION_1}
      volumes:
        - ./config/php-fpm/php${PHP_VERSION_1}.ini:/usr/local/etc/php/php.ini
        - ${ZZ_DOCKER_CONF_PATH_1}:/usr/local/etc/php-fpm.d/zz-docker.conf
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      networks:
        - backend

    php-fpm-2:
      build:
        context: ./images/php-fpm
        args:
          - LARADOCK_PHP_VERSION=${PHP_VERSION_2}
      volumes:
        - ./config/php-fpm/php${PHP_VERSION_2}.ini:/usr/local/etc/php/php.ini
        - ${ZZ_DOCKER_CONF_PATH_2}:/usr/local/etc/php-fpm.d/zz-docker.conf
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      networks:
        - backend

### MySQL ################################################
    mysql:
      build:
        context: ./images/mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION_1}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${WORKSPACE_TIMEZONE}
      volumes:
        - ${DATA_PATH_HOST}/mysql${MYSQL_VERSION_1}:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        - ${MYSQL_MY_CNF_PATH_1}:/etc/mysql/conf.d/my.cnf
        - ${MYSQL_LOG_PATH}:/var/log/mysql
      ports:
        - "${MYSQL_PORT_1}:3306"
      networks:
        - backend

    mysql-2:
      build:
        context: ./images/mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION_2}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${WORKSPACE_TIMEZONE}
      volumes:
        - ${DATA_PATH_HOST}/mysql${MYSQL_VERSION_2}:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        - ${MYSQL_MY_CNF_PATH_2}:/etc/mysql/conf.d/my.cnf
        - ${MYSQL_LOG_PATH}:/var/log/mysql
      ports:
        - "${MYSQL_PORT_2}:3306"
      networks:
        - backend

### Redis ################################################
    redis:
      build: ./images/redis
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      ports:
        - "${REDIS_PORT}:6379"
      networks:
        - backend

### ElasticSearch ########################################
    elasticsearch:
      build: ./images/elasticsearch
      volumes:
        - ${DATA_PATH_HOST}/elasticsearch:/usr/share/elasticsearch/data
      environment:
        - cluster.name=laradock-cluster
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
      ports:
        - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
        - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
      networks:
        - frontend
        - backend
